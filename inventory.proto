syntax = "proto3"; // 指定proto版本
option go_package = "./api/inventorys;inventorys"; // 指定golang包名

package inventory.ser; // 指定服务名
// 定义inventory服务
// => 相当于 go 中的 type InventoryService interface{}
service InventoryService {
  // => 相当于go中 接口的结构体内
  rpc Get(Inventory) returns (Inventory){}
}
// 定义信息体
// => 相当于 go 中的 type Inventory struct{}
message Inventory{
  // => 相当于go中 结构体的内容
  int32 id = 1;
  string name = 2;
  int32 num = 4;
}

// 定义信息体
// => 相当于 go 中的 type Inventory2 struct{}
message Inventory2{
  // => 相当于go中 结构体的内容
  int32 id = 1;
  string name = 2;
  int32 num = 3;
}

// 定义信息体
// => 相当于 go 中的 type Inventory2 struct{}
message Inventory3{
  // => 相当于go中 结构体的内容
  int32 id = 1;
  string name = 2;
  int32 num = 3;
}
